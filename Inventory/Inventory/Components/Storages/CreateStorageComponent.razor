@using Entities
@using Bussines

@inject NavigationManager NavManager
<div>
    <EditForm Model="oStorage">
        
        <div class="form-group">
            <label>Producto:</label>
            <InputSelect @bind-Value="oStorage.ProductId" class="form-control">
                @foreach (var product in products)
                {
                    <option value="@product.ProductId">@product.ProductName</option>
                }
            </InputSelect>
        </div>
        <div class="form-group">
            <label>Bodega:</label>
            <InputSelect @bind-Value="oStorage.WarehouseId" class="form-control">
                @foreach (var warehouse in warehouses)
                {
                    <option value="@warehouse.WarehouseId">@warehouse.WarehouseName</option>
                }
            </InputSelect>
        </div>
        <input type="button" value="Agregar producto" @onclick="SaveWarehouse" />
    </EditForm>
</div>
<div class="text-center" h4>
    @message
</div>
@code {
    StorageEntity oStorage = new StorageEntity();
    List<ProductEntity> products = new List<ProductEntity>();
    List<WarehouseEntity> warehouses = new List<WarehouseEntity>();
    string message;

    protected override async Task OnInitializedAsync()
    {
        products = B_Product.ProductList();
        warehouses = B_Warehouse.WarehouseList();

    }
    private void SaveWarehouse()
    {
        oStorage.StorageId = $"{oStorage.WarehouseId}-{oStorage.ProductId}";
        if (!B_Storage.IsStorageInWarehouse(oStorage.StorageId))
        {
            oStorage.LastUpdate = DateTime.Now;

            B_Storage.CreateStorage(oStorage);
            message = "Producto almacenado";
        }
        else {

            message = "El producto ya existe";
        }
    }
}
 